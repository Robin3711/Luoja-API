generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Quiz {
  id         Int        @id @default(autoincrement())
  title      String
  category   Int?       @default(0)
  difficulty String?    @default("any")
  userId     Int?
  public     Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  games      Game[]
  questions  Question[]
  user       User?      @relation(fields: [userId], references: [id], onDelete: Cascade)

  MultiplayerGame MultiplayerGame[]
}

model Question {
  id            Int      @id @default(autoincrement())
  quizId        Int
  text          String
  trueFalse     Boolean
  correctAnswer String
  falseAnswer1  String?
  falseAnswer2  String?
  falseAnswer3  String?
  answers       Answer[]
  quiz          Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
}

model Game {
  id             String   @id
  userId         Int?
  quizId         Int
  questionCursor Int
  createdAt      DateTime @default(now())
  answers        Answer[]
  mode           String?
  user           User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  quiz           Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
}

model Answer {
  questionId Int
  gameId     String
  correct    Boolean
  game       Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@id([questionId, gameId])
}

model User {
  id       Int    @id @default(autoincrement())
  password String
  userName String @unique
  games    Game[]
  quizs    Quiz[]

  MultiplayerPlayer MultiplayerPlayer[]
}

model MultiplayerGame {
  id             String   @id
  quizId         Int
  questionCursor Int
  createdAt      DateTime @default(now())
  players        MultiplayerPlayer[]
  quiz           Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
}

model MultiplayerPlayer {
  id             Int      @id @default(autoincrement())
  userId         Int
  gameId         String
  score          Int      @default(0)
  answered       Boolean  @default(false)
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  game           MultiplayerGame @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@unique([userId, gameId])
}


